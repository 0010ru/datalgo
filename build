#!/bin/zsh

# settings
CC=clang
CFLAGS=(-Wall -Werror -Wextra -pedantic -g)
SRC=src
BUILD=dist


# build
find "$SRC" -type f -name "*.c" | while read src_filepath; do
    path_to_file_wo_ext="${src_filepath%.*}"
    program_name=$(basename $path_to_file_wo_ext)
    program_path=$(dirname "${path_to_file_wo_ext#$SRC/}")
    
    echo --------">" $program_path/$program_name
    mkdir -p $BUILD/$program_path

    echo ------">" Compiling $src_filepath to $BUILD/$program_path/$program_name
    echo ----">" $CC $CFLAGS -o $BUILD/$program_path/$program_name $src_filepath
    "$CC" "${CFLAGS[@]}" -o "$BUILD/$program_path/$program_name" "$src_filepath"
    echo --">" Builded $BUILD/$program_path/$program_name

    echo "\n"
done


# todo: refactor to autobuild from .ll files to executable
mkdir -p dist/memory
llc -filetype=obj -relocation-model=pic src/memory/memory_write_read_asm.ll -o dist/memory/memory_write_read_asm.o
"$CC" -fPIE -pie dist/memory/memory_write_read_asm.o -o dist/memory/memory_write_read_asm
